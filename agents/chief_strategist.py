# agents/chief_strategist.py
import json
from utils.helpers import parse_json_from_response

class ChiefStrategist:
    """
    "Мозг" системы. Создает план, проводит рефлексию и пишет финальный отчет.
    Работает с самой мощной моделью (gemini-2.5-pro).
    """
    def __init__(self, llm):
        self.llm = llm
        print("-> ChiefStrategist (на базе gemini-2.5-pro) готов к работе.")

    def create_strategic_plan(self, world_model_context: dict) -> dict:
        """
        Генерирует первоначальный, многофазовый план исследования на основе статического контекста.
        """
        print("   [Стратег] Шаг 1: Создаю первоначальный стратегический план...")
        
        prompt = f"""**ОБЩИЙ КОНТЕКСТ ПРОЕКТА:**
---
{json.dumps(world_model_context['static_context'], ensure_ascii=False, indent=2)}
---

**ТВОЯ РОЛЬ:**
Ты - Главный Продуктовый Стратег. Твоя первая задача - создать комплексный, пошаговый план исследования для достижения главной цели проекта.

**ТВОЯ ЗАДАЧА:**
Проанализируй "ВХОДНОЙ БРИФ ДЛЯ ВЕРИФИКАЦИИ" в статическом контексте. Твоя цель — не принять его на веру, а **превратить его в исчерпывающий, подтвержденный фактами отчет**.

**СГЕНЕРИРУЙ ПЛАН ДЛЯ ФАЗЫ 1: "ГЛУБОКАЯ РАЗВЕДКА АКТИВОВ ТГУ"**
Создай максимально подробный список из 4-6 задач для экспертов, чтобы:
1.  **Верифицировать каждое утверждение** из брифа.
2.  **Найти подтверждающие или опровергающие доказательства** для оценок готовности (3/10 и 5/10).
3.  **Найти всю возможную информацию** о Telegram-боте 'Expecto Patronum' (технологии, команда, результаты).
4.  **Провести открытый поиск** по запросам типа "EdTech проекты Томский государственный университет", "цифровая трансформация ТГУ", "стартапы ТГУ образование", чтобы найти другие, неучтенные активы.

**ДОСТУПНЫЕ ЭКСПЕРТЫ:** `HR_Expert`, `Finance_Expert`, `Competitor_Expert`, `Tech_Expert`, `ProductOwnerAgent`.

**ПРИМЕР ВЫВОДА (СТРУКТУРА):**
```json
{{
  "main_goal_status": "IN_PROGRESS",
  "phases": [
    {{
      "phase_name": "Phase 1: Глубокая Разведка Активов ТГУ",
      "status": "IN_PROGRESS",
      "tasks": [
        {{"task_id": "task_001", "assignee": "Tech_Expert", "description": "Проверить утверждение о проблемах с производительностью Moodle при масштабировании.", "goal": "Подтвердить или опровергнуть слабость LMS IDO и оценить стоимость ее устранения.", "status": "PENDING"}},
        {{"task_id": "task_002", "assignee": "ProductOwnerAgent", "description": "Найти всю информацию о Telegram-боте 'Expecto Patronum'", "goal": "Оценить потенциал использования чат-ботов в нашем продукте.", "status": "PENDING"}}
      ]
    }},
    {{
      "phase_name": "Phase 2: Анализ Рынка и Конкурентов",
      "status": "PENDING",
      "tasks": []
    }}
  ]
}}
```

Твой стратегический план:"""
        
        response = self.llm.invoke(prompt)
        plan = parse_json_from_response(response.content)

        if plan and isinstance(plan, dict) and "phases" in plan:
            print("   [Стратег] Первоначальный план успешно сгенерирован.")
            return plan
        else:
            print("!!! Стратег: Не удалось сгенерировать первоначальный план. Используется план по умолчанию.")
            return {
                "main_goal_status": "IN_PROGRESS",
                "phases": [{"phase_name": "Phase 1: Initial Scan", "status": "IN_PROGRESS", "tasks": [{"task_id": "task_001", "assignee": "HR_Expert", "description": "5 главных болей HRD в РФ", "goal": "Понять мотивацию клиентов.", "status": "PENDING"}]}]
            }

    def reflect_and_update_plan(self, world_model_context: dict) -> dict:
        """Анализирует текущее состояние Базы Знаний и решает, что делать дальше."""
        print("   [Стратег] Шаг X: Провожу рефлексию и обновляю план...")
        # ЗАГЛУШКА: Для предсказуемости первого запуска, мы просто переходим к следующей фазе.
        # В реальной системе здесь будет сложный промпт для анализа и генерации новых задач.
        plan = world_model_context['dynamic_knowledge']['strategic_plan']
        current_phase_index = next((i for i, phase in enumerate(plan['phases']) if phase['status'] == 'IN_PROGRESS'), -1)
        
        if current_phase_index != -1:
            plan['phases'][current_phase_index]['status'] = 'COMPLETED'
            print(f"   [Стратег] Фаза '{plan['phases'][current_phase_index]['phase_name']}' завершена.")
            
            if current_phase_index + 1 < len(plan['phases']):
                next_phase_index = current_phase_index + 1
                plan['phases'][next_phase_index]['status'] = 'IN_PROGRESS'
                print(f"   [Стратег] Начинаю следующую фазу: '{plan['phases'][next_phase_index]['phase_name']}'.")
                # Здесь в будущем будет генерация задач для новой фазы
            else:
                print("   [Стратег] Все фазы завершены. Готовлюсь к написанию финального отчета.")
                plan['main_goal_status'] = 'READY_FOR_FINAL_BRIEF'
        
        return plan

    def write_final_brief(self, world_model_context: dict) -> str:
        """Пишет финальную аналитическую записку на основе всех собранных данных."""
        print("   [Стратег] Финальный Шаг: Пишу итоговую аналитическую записку...")
        
        prompt = f"""**ТВОЯ РОЛЬ:**
Ты - Главный Продуктовый Стратег и автор финального документа. Твой стиль - ясный, убедительный и ориентированный на бизнес-результат.

**ТВОЯ ЗАДАЧА:**
На основе ВСЕЙ собранной информации (статический контекст + база знаний с верифицированными утверждениями), напиши убедительную аналитическую записку для коммерческого директора ТГУ.

**КОНТЕКСТ И БАЗА ЗНАНИЙ:**
---
{json.dumps(world_model_context, ensure_ascii=False, indent=2)}
---

**СТРУКТУРА АНАЛИТИЧЕСКОЙ ЗАПИСКИ:**
1.  **Резюме для Руководителя (Executive Summary):** Краткая суть (возможность, решение, выгода, запрос).
2.  **Анализ Рынка и Ключевая Возможность:** Опиши рыночную ситуацию и сформулируй главную возможность для ТГУ.
3.  **Концепция Продукта "Карьерный Навигатор":** Опиши наше решение, опираясь на идеи из 'initial_brief' и слабости конкурентов.
4.  **Наше Уникальное Преимущество (Почему ТГУ?):** Подчеркни наши сильные стороны (технологии, методология, бренд).
5.  **Предварительная Бизнес-Модель и Риски:** Обозначь возможные модели монетизации и главные риски.
6.  **Дорожная Карта MVP и Следующие Шаги:** Предложи конкретный, измеримый план действий.

**ПРАВИЛО ЦИТИРОВАНИЯ:**
Каждое ключевое утверждение в твоем тексте (цифры, факты о конкурентах) ОБЯЗАТЕЛЬНО должно сопровождаться ссылкой на доказательство в формате [Утверждение: claim_id].

Твоя финальная аналитическая записка:"""
        
        response = self.llm.invoke(prompt)
        return response.content
